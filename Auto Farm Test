shared.autoFarm = shared.autoFarm or false

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

local _isInGame = false
local currentFruit = nil
local currentHumanoid = nil
local characterReady = false
local lockedPosition = nil
local lockForever = false
local lastTeleportTime = 0
local hasTeleported = false
local userMoved = false
local teleportDone = false

-- Detect player movement (WASD/mobile/touch)
UserInputService.InputBegan:Connect(function(input, processed)
	if input.UserInputType == Enum.UserInputType.Keyboard or input.UserInputType == Enum.UserInputType.Touch then
		userMoved = true
		lockForever = false
	end
end)

local skills = {
	Barrier = {"Barrier", "Bubble", "Crash", "Spikes"},
	Chop = {"Cannon", "Grab", "Car", "Festival"},
	Sand = {"DesertSlicer", "Spada", "Swamp", "SablesPesado"},
	Smoke = {"WhiteBlow", "WhiteOut", "Typhoon", "Firework"},
	Rubber = {"Pistol", "Bazooka", "Gatling", "Rocket", "Gear2"},
	Falcon = {"WingSlicer", "FlyingTalon", "WingCyclone", "FalconPunch"},
	Gas = {"BlueSword", "Suffocation", "CombustiveGas", "RelaxingGas"},
	Bomb = {"GrenadeBlaster", "Leap", "KickBomb", "HowitzerImpact"},
	Ice = {"Partisan", "Geyser", "Pheasant", "IceAge", "IceDragon"},
	Darkness = {"BlackHole", "Liberation", "BlackWorld", "Kurouzu", "DarkHaul", "DarkEnd"},
	Ash = {"ThousandCrows", "Obelisk", "CrowCascade", "CrowCoffin"},
	Light = {"LightKick", "MirrorKick", "BlindingCombo", "Guzan", "JewelsOfLight", "Flight"},
	Flame = {"FireFist", "FireGun", "Pillar", "Beam", "Enkai", "Flight"},
	Magma = {"MajorEruption", "MeteorVolcano", "Plume", "EruptiveSurge", "HellHound"},
	Paw = {"PressureCannon", "SonicStomp", "SumoThrustBarrage", "Torture", "UrsusShock"},
	String = {"Fullbright", "OverheatWhip", "StringKnight", "SixteenBullets", "Skywalk"},
	Love = {"CupidsArrows", "BouquetOfPain", "Heartthrob", "Heartstrings", "BlossomWind"},
	Snow = {"SnowAngel", "WinterStorm", "FrostDome", "SnowballCatastrophe", "SnowDrift"},
	Quake = {"Fist", "Eruption", "Slam", "IslandShake", "SeaQuake"},
	Gravity = {"Push", "Launch", "Avalanche", "Shoot", "PlanetaryDevastation", "GreatMeteor"},
	Phoenix = {"Fujiazami", "TalonSlam", "PhoenixInferno", "Bluebird", "Transform", "HawkRush"},
	Dragon = {"DragonBreath", "DragonClaw", "Screech", "DracoMeteor", "CrimsonBomb", "Transformation", "Tatsumaki"},
	TSRubber = {"JetPistol", "JetGatling", "RedHawk", "GrizzlyMagnum", "Gear4", "KongGun", "Culverin", "KongGatling", "KingKongGun", "ElasticPropulsion"},
	Magnet = {"Repel", "MetalArms", "Cyclone", "PunkPrison", "PunkCannon"},
	IceV2 = {"PiercingGlacier", "BlizzardBlade", "IceHail", "AbsoluteZero", "IceSkate"},
	MagmaV2 = {"HoundBlaze", "MagmaRain", "MagmaFloor", "Meigo", "CrimsonHowl"},
	LightV2 = {"PiercingShine", "PhotonStorm", "XFlash", "HeavenlyDescent", "SolarGrenade", "MirrorFlight"},
	FlameV2 = {"ScorchingFist", "TwistingClaw", "BlazingMeteor", "CrimsonBody", "Supernova"},
	Venom = {"ChloroFrenzy", "VenomRoad", "ToxicHydra", "PoisonStorm", "HydraCyclone", "Transform", "PoisonGeyser", "ToxicGeyser"},
	Dough = {"GrilledDough", "DoughMuddle", "LotusDoughCombo", "Chestnut", "Anemone", "Buzzcut"},
	Leopard = {"AfterimageCombo", "SpiralKick", "ClawBarrage", "PredatorsProwl", "Transform", "Rokuogan", "RisingClawCombo"},
	DoughV2 = {"GrilledLance", "ElasticLasso", "Oblivion", "PowerDough", "BlazingStorm", "ScorchingBuzzcut"},
	Ope = {"Room", "Takt", "Wreckage", "HurricaneShock", "GammaKnife", "Mes", "Shambles"},
	LeopardV2 = {"FingerPistolBarrage", "SonicKick", "InfinityDrive", "UnrelentingAssault", "Transform", "HeavensDemise"},
	Lightning = {"VoltageUp", "LightningPalm", "CrashingThunder", "ProjectedBurst", "CrushingJudgment", "Raigo"},
	Nika = {"RocGun", "NeoRedHawk", "RocGatling", "RedRoc", "DrumsOfLiberation", "Gear5", "SpinningTop", "DawnRocket", "MolePistolCombo", "RisingBolt", "GigantStamp", "BajrangGun"},
	DragonV2 = {"InfernoBreath", "ThunderBagua", "DragonTwister", "BeastsBellow", "Transform", "BoloFrenzy", "FlamingTorch", "Demolition", "Transformation"},
	Soul = {"EnthralGrasp", "ScorchingSickle", "ZeusMeadow", "CrimsonPillar", "Transform", "MaserCannon"},
	DarkXQuake = {"AntiQuake", "BlackHolePath", "BlackTurret", "NeoKurouzuCombo", "AntiBody", "QuadraSeaQuake"},
	Okuchi = {"PrimalRage", "ArcticBreath", "DevastatingDrop", "HallowedCuts", "GlacialCoat", "DivineSerpent", "Transform"},
}

local function isSkillReady(skill)
	local cdFolder = player:FindFirstChild("Cooldowns")
	if not cdFolder then return true end
	local nested = cdFolder:FindFirstChild("Cooldowns")
	if not nested then return true end
	local skillCD = nested:FindFirstChild(skill)
	return not skillCD or skillCD.Value <= 0
end

local function updateCurrentFruit()
	local data = player:FindFirstChild("MAIN_DATA")
	if not data then return end
	local slot = data:FindFirstChild("Slot")
	if not slot then return end
	local fruit = data.Slots:FindFirstChild(tostring(slot.Value))
	currentFruit = fruit and fruit.Value or nil
end

local function castSkill(fruit, skill)
	if not shared.autoFarm or not isSkillReady(skill) then return end
	local char = player.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	if lockForever then
		hrp.Velocity = Vector3.zero
		hrp.CFrame = CFrame.new(lockedPosition)
	end

	local offset = hrp.CFrame.LookVector * 20
	local target = hrp.Position + offset
	local dir = (target - hrp.Position).Unit * 45

	local ray = {
		Normal = Vector3.yAxis,
		Direction = dir,
		Origin = hrp.Position,
		Instance = workspace.Map:FindFirstChildWhichIsA("BasePart") or workspace.Terrain,
		Distance = dir.Magnitude,
		Material = Enum.Material.Grass,
		Position = target
	}

	pcall(function()
		ReplicatedStorage.Replicator:InvokeServer(fruit, skill, {
			Ground = {Position = target},
			MouseRay = ray
		})
		ReplicatedStorage.ReplicatorNoYield:FireServer("ClientData", "UpdateData", {
			RootCF = hrp.CFrame,
			MouseRay = ray
		})
	end)
end

local function startSkillLoop()
	task.spawn(function()
		while true do
			if shared.autoFarm and characterReady and currentFruit and skills[currentFruit] then
				for _, skill in ipairs(skills[currentFruit]) do
					if not shared.autoFarm then break end
					castSkill(currentFruit, skill)
					task.wait(0.15)
				end
			else
				task.wait(0.5)
			end
		end
	end)
end

local function initialTeleport()
	if not shared.autoFarm then return end
	local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	local pos = Vector3.new(-1420, 798.93, -85)
	hrp.CFrame = CFrame.new(pos)
	lockedPosition = pos
	lastTeleportTime = tick()
	teleportDone = true

	task.delay(20, function()
		if shared.autoFarm and not userMoved then
			lockedPosition = hrp.Position
			lockForever = true
		end
	end)
end

local function setupCharacter(char)
	characterReady = false
	local humanoid = char:WaitForChild("Humanoid", 5)
	local hrp = char:WaitForChild("HumanoidRootPart", 5)
	if not hrp or not humanoid then return end
	task.spawn(function()
		for _ = 1, 25 do
			updateCurrentFruit()
			if currentFruit then
				characterReady = true
				break
			end
			task.wait(0.2)
		end
	end)
end

player.CharacterAdded:Connect(function(char)
	_isInGame = true
	characterReady = false
	hasTeleported = false
	lockForever = false
	userMoved = false
	setupCharacter(char)
	if shared.autoFarm and not teleportDone then
		task.delay(1, initialTeleport)
	end
end)

if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
	_isInGame = true
	setupCharacter(player.Character)
	if shared.autoFarm and not teleportDone then
		task.delay(1, initialTeleport)
	end
end

task.spawn(function()
	while true do
		if shared.autoFarm and not player.Character then
			for _, guiObj in ipairs(gui:GetChildren()) do
				if guiObj:IsA("ScreenGui") then
					local playButton = guiObj:FindFirstChild("Play", true)
					if playButton and playButton:IsA("GuiButton") then
						GuiService.SelectedObject = playButton
						task.wait(2)
						VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
						task.wait(0.05)
						VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
					end
				end
			end
		end
		task.wait(2)
	end
end)

RunService.Stepped:Connect(function()
	if shared.autoFarm and lockForever and player.Character then
		local hrp = player.Character:FindFirstChild("HumanoidRootPart")
		if hrp then
			hrp.Velocity = Vector3.zero
			hrp.CFrame = CFrame.new(lockedPosition)
		end
	end
end)

updateCurrentFruit()
startSkillLoop()
