local player = game.Players.LocalPlayer
local Replicator = game:GetService("ReplicatedStorage") -- gi·∫£ s·ª≠ Replicator l√† ReplicatedStorage, b·∫°n thay ƒë√∫ng path

local rareFruits = {
    "DarkXQuake", "DragonV2", "DoughV2", "Nika", "LeopardV2",
    "Ope", "Okuchi", "Soul", "Lightning", "Chop"
}

local function isRare(fruitName)
    for _, v in ipairs(rareFruits) do
        if string.lower(v) == string.lower(fruitName) then
            return true
        end
    end
    return false
end

local currentSlot = 1
local maxSlot = 4
local autoSpin = true

local function getEquippedFruit()
    local mainData = player:FindFirstChild("MAIN_DATA")
    if mainData then
        local slots = mainData:FindFirstChild("Slots")
        if slots then
            local slot = slots:FindFirstChild(tostring(currentSlot))
            if slot then
                return slot.Value
            end
        end
    end
    return nil
end

while autoSpin do
    local equipped = getEquippedFruit()
    print("Slot", currentSlot, "c·∫ßm:", equipped)

    if equipped and isRare(equipped) then
        print("G·∫∑p tr√°i hi·∫øm:", equipped)

        -- Th√¥ng b√°o l√™n m√†n h√¨nh
        pcall(function()
            game.StarterGui:SetCore("SendNotification", {
                Title = "üéâ TR√ÅI HI·∫æM!",
                Text = player.DisplayName .. " quay ƒë∆∞·ª£c: " .. equipped,
                Duration = 7,
                Icon = "rbxassetid://138706932256796"
            })
        end)

        -- N·∫øu ch∆∞a ph·∫£i slot cu·ªëi, chuy·ªÉn sang slot ti·∫øp theo
        if currentSlot < maxSlot then
            currentSlot += 1
            Replicator:InvokeServer("FruitsHandler", "SwitchSlot", {Slot = currentSlot})
            task.wait(1.5)
        else
            print("D·ª´ng spin, h·∫øt slot")
            autoSpin = false
            break
        end
    else
        print("Spin ti·∫øp...")
        Replicator:InvokeServer("FruitsHandler", "Spin", {})
        task.wait(2.5)
    end

    task.wait(1)
end
