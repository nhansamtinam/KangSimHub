--Main
repeat wait() until game:IsLoaded() and game.Players.LocalPlayer

getgenv().Key = "trongkim19052009"
local validKeys = {
    ["trongkim19052009"] = true,
}

local player = game.Players.LocalPlayer
task.wait(1)

if not validKeys[getgenv().Key] then
    player:Kick("Key sai?. B·∫°n ƒë√£ b·ªã lo·∫°i.")
    return
end

game.StarterGui:SetCore("SendNotification", {
    Title = "KimSoi Hub",
    Text = "ƒê√£ T·∫£i Xong",
    Duration = 10,
    Icon = "rbxassetid://138706932256796"
})

task.wait(1.5)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "KimSoi Hub",
    SubTitle = "By KimSoi",
    TabWidth = 160,
    Size = UDim2.fromOffset(540, 450),
    Acrylic = true,
    Theme = "Default",
    MinimizeKey = Enum.KeyCode.LeftControl
})
-- Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
    Sever = Window:AddTab({ Title = "Sever-Teleport", Icon = "" }),
    Rejoin = Window:AddTab({ Title = "Rejoin", Icon = "" }),
    Fruit = Window:AddTab({ Title = "Fruit", Icon = "" }),
    Player = Window:AddTab({ Title = "Player", Icon = "" }),
    Setting = Window:AddTab({ Title = "Setting",Icon = ""})
}
InterfaceManager:SetLibrary(Fluent)
SaveManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
SaveManager:BuildConfigSection(Tabs.Setting)
SaveManager:LoadAutoloadConfig()

-- Toggle Icon
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local TextButton = Instance.new("TextButton")

ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.AnchorPoint = Vector2.new(0.1, 0.1)
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Position = UDim2.new(0, 20, 0.1, -6)
Frame.Size = UDim2.new(0, 50, 0, 50)
Frame.Name = "ToggleIcon"
UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = Frame

ImageLabel.Parent = Frame
ImageLabel.Name = "Icon"
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel.Size = UDim2.new(0, 60, 0, 60)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Image = "rbxassetid://138706932256796"

TextButton.Name = "HotkeyButton"
TextButton.Parent = Frame
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.BackgroundTransparency = 1
TextButton.Text = ""

local VirtualInputManager = game:GetService("VirtualInputManager")
TextButton.MouseButton1Down:Connect(function()
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftControl, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftControl, false, game)
end)
-- Auto Farm
local autoFarmEnabled = false
Tabs.Main:AddToggle("AutoFarmToggle", {
    Title = "Auto Farm",
    Default = false,
    Callback = function(value)
        autoFarmEnabled = value
        shared.autoFarm = value
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Auto%20Farm"))()
        end
    end
})

-- Auto Boss
Tabs.Main:AddToggle("AutoBossToggle", {
    Title = "Auto Boss",
    Default = false,
    Callback = function(value)
        autoBossEnabled = value
        shared.autoBoss = value
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Auto%20Boss%20For%20Main%20Script"))()
        end
    end
})

-- Auto Check Mana
Tabs.Main:AddToggle("AutoCheckManaToggle", {
    Title = "Auto Check Mana",
    Default = false,
    Callback = function(value)
        autoCheckManaEnabled = value
        shared.autoCheckMana = value
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/AutoCheckManaForMainScript"))()
        end
    end
})

-- Ch·ªçn Slot
local selectedSlot = 1
Tabs.Misc:AddDropdown("SlotSelector", {
    Title = "Ch·ªçn Slot Tr√°i √Åc Qu·ª∑",
    Values = { "1", "2", "3", "4", "5", "6", "7", "8" },
    Multi = false,
    Default = "1",
    Callback = function(value)
        selectedSlot = tonumber(value)
        print("ƒê√£ ch·ªçn slot: " .. selectedSlot)
    end
})

-- G·ª≠i l·ªánh SwitchSlot
Tabs.Misc:AddButton({
    Title = "Chuy·ªÉn ƒê·∫øn Slot ƒê√£ Ch·ªçn",
    Description = "G·ª≠i l·ªánh SwitchSlot v·ªõi slot ƒë√£ ch·ªçn",
    Callback = function()
        local args = {
            "FruitsHandler",
            "SwitchSlot",
            {
                Slot = selectedSlot
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Replicator"):InvokeServer(unpack(args))
        print("ƒê√£ g·ª≠i l·ªánh SwitchSlot ƒë·∫øn slot: " .. selectedSlot)
    end
})

-- Boost FPS Toggle
local boostFPSEnabled = false
Tabs.Misc:AddToggle("BoostFPSToggle", {
    Title = "Whit Screen",
    Default = false,
    Callback = function(value)
        boostFPSEnabled = value
        local lighting = game:GetService("Lighting")
        local terrain = workspace.Terrain
        if boostFPSEnabled then
            lighting.GlobalShadows = false
            lighting.FogEnd = 9e9
            lighting.Brightness = 1
            lighting.ClockTime = 14
            lighting.Ambient = Color3.new(0, 0, 0)
            lighting.OutdoorAmbient = Color3.new(0, 0, 0)
            terrain.WaterWaveSize = 0
            terrain.WaterWaveSpeed = 0
            terrain.WaterReflectance = 0
            terrain.WaterTransparency = 0
            game:GetService("RunService"):Set3dRenderingEnabled(false)
        else
            lighting.GlobalShadows = true
            lighting.FogEnd = 100000
            lighting.Brightness = 2
            lighting.ClockTime = 14
            lighting.Ambient = Color3.fromRGB(128, 128, 128)
            lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
            terrain.WaterWaveSize = 1
            terrain.WaterWaveSpeed = 1
            terrain.WaterReflectance = 0.5
            terrain.WaterTransparency = 0.5
            game:GetService("RunService"):Set3dRenderingEnabled(true)
        end
    end
})

Tabs.Misc:AddButton({
    Title = "Boost FPS",
    Description = "Gi·∫£m ƒê·ªì H·ªça",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/BoostFPS/refs/heads/main/BoostFPS"))()
    end
})

Tabs.Misc:AddButton({
    Title = "Redeem All Code",
    Description = "Redeem All Code",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Auto%20Redeem%20Code"))()
    end
})
-- Danh s√°ch Map v√† ID t∆∞∆°ng ·ª©ng
local mapIds = {
    ["Dressrosa"] = 9224601490,
    ["Wano"] = 12413901502,
    ["Whole Cake"] = 16190471004,
    ["Ranked Map"] = 17493355683
}

-- M·∫∑c ƒë·ªãnh map ƒë∆∞·ª£c ch·ªçn
local selectedMapName = "Dressrosa"

-- Dropdown ch·ªçn map
Tabs.Sever:AddDropdown("MapSelector", {
    Title = "Ch·ªçn Map",
    Values = { "Dressrosa", "Wano", "Whole Cake", "Ranked Map" },
    Multi = false,
    Default = selectedMapName,
    Callback = function(value)
        selectedMapName = value
    end
})

-- N√∫t Teleport
Tabs.Sever:AddButton({
    Title = "Teleport ƒê·∫øn Map",
    Description = "D·ªãch chuy·ªÉn ƒë·∫øn map ƒë√£ ch·ªçn",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer

        local placeId = mapIds[selectedMapName]
        if not placeId then
            warn("‚ùå Kh√¥ng t√¨m th·∫•y ID cho map: " .. tostring(selectedMapName))
            return
        end

        print("üîπ ƒêang d·ªãch chuy·ªÉn ƒë·∫øn:", selectedMapName, " (PlaceId:", placeId, ")")
        TeleportService:Teleport(placeId, player)
    end
})
-- Auto Rejoin Setup
local rejoinDelay = 0
local hourInput = 0
local minuteInput = 0
local secondInput = 0

Tabs.Rejoin:AddInput("HourInput", {
    Title = "Gi·ªù",
    Default = "0",
    Placeholder = "Nh·∫≠p s·ªë gi·ªù",
    Numeric = true,
    Callback = function(value)
        hourInput = tonumber(value) or 0
    end
})

Tabs.Rejoin:AddInput("MinuteInput", {
    Title = "Ph√∫t",
    Default = "0",
    Placeholder = "Nh·∫≠p s·ªë ph√∫t",
    Numeric = true,
    Callback = function(value)
        minuteInput = tonumber(value) or 0
    end
})

Tabs.Rejoin:AddInput("SecondInput", {
    Title = "Gi√¢y",
    Default = "0",
    Placeholder = "Nh·∫≠p s·ªë gi√¢y",
    Numeric = true,
    Callback = function(value)
        secondInput = tonumber(value) or 0
    end
})

Tabs.Rejoin:AddButton({
    Title = "Nh·∫•n ƒê·ªÉ Auto Rejoin",
    Description = "Rejoin Sau Kho·∫£ng Th·ªùi Gian ƒê√£ C√†i(M·∫∑c ƒê·ªãnh L√†: 0 Gi√¢y)",
    Callback = function()
        rejoinDelay = (hourInput * 3600) + (minuteInput * 60) + secondInput

        game.StarterGui:SetCore("SendNotification", {
            Title = "Auto Rejoin",
            Text = "S·∫Ω t·ª± rejoin sau " .. rejoinDelay .. " gi√¢y",
            Duration = 8,
            Icon = "rbxassetid://138706932256796"
        })

        task.spawn(function()
            while true do
                task.wait(rejoinDelay)
                game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
            end
        end)
    end
})
--Anti AFK
Tabs.Misc:AddToggle("Anti AFK", {
    Title = "Anti AFK",
    Default = false,
    Callback = function(value)
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/AntiAFK"))()
        end
    end
})

--Show Stats
Tabs.Misc:AddToggle("ShowStats", {
    Title = "Show Stats",
    Default = false,
    Callback = function(value)
        ShowStatsEnabled = value
        shared.ShowStats = value
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Show%20Stats"))()
        end
    end
})
--Teleport NPC
local selectedNPCName = "Soru Quest"

-- Dropdown Ch·ªçn NPC
Tabs.Sever:AddDropdown("NPCSelector", {
    Title = "Ch·ªçn NPC",
    Values = { "Soru Book", "Soru Quest" },
    Multi = false,
    Default = selectedNPCName,
    Callback = function(value)
        selectedNPCName = value
    end
})

-- N√∫t Teleport
Tabs.Sever:AddButton({
    Title = "Teleport ƒê·∫øn NPC",
    Description = "D·ªãch chuy·ªÉn ƒë·∫øn NPC ƒë√£ ch·ªçn",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:FindFirstChild("HumanoidRootPart")

        if not hrp then
            warn("Kh√¥ng t√¨m th·∫•y HumanoidRootPart c·ªßa ng∆∞·ªùi ch∆°i.")
            return
        end

        if selectedNPCName == "Soru Quest" then
            -- D·ªãch chuy·ªÉn ƒë·∫øn t·ªça ƒë·ªô c·ªë ƒë·ªãnh c·ªßa Soru Quest
            local function fastTeleport()
                local hrpCheck
                repeat
                    hrpCheck = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                    task.wait()
                until hrpCheck and player.Character.Parent ~= nil

                hrpCheck.CFrame = CFrame.new(-773.96, 835.93, 696.97)
            end
            fastTeleport()

        elseif selectedNPCName == "Soru Book" then
            -- D·ªãch chuy·ªÉn ƒë·∫øn NPC "Soru Book"
            local npcFolder = workspace:FindFirstChild("NPCs")
            local target = npcFolder and npcFolder:FindFirstChild("Soru Book")

            if target and target:FindFirstChild("HumanoidRootPart") then
                hrp.CFrame = target.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
            else
                warn("Kh√¥ng t√¨m th·∫•y NPC 'Soru Book' ho·∫∑c thi·∫øu HumanoidRootPart.")
            end

        else
            warn("Ch∆∞a ch·ªçn NPC ho·∫∑c NPC kh√¥ng h·ª£p l·ªá.")
        end
    end
})
--Sever Hop
Tabs.Sever:AddButton({
    Title = "Sever Hop",
    Description = "Join Another Sever",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Sever%20Hop"))()
    end
})
--Sever Hop Less Player
Tabs.Sever:AddButton({
    Title = "Sever Hop Less Player",
    Description = "Join Another Sever Less Player",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Sever%20Hop%20Less%20Player"))()
    end
})
--Auto Find Boss
Tabs.Main:AddToggle("Auto Find Boss", {
    Title = "Auto Find Boss(Macro,Big Mon, Kaido)",
    Default = false,
    Callback = function(value)
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Auto%20Find%20Boss"))()
        end
    end
})
--Auto Find Katakuri
Tabs.Main:AddToggle("Auto Find Boss", {
    Title = "Auto Find Boss(Katakuri)",
    Default = false,
    Callback = function(value)
        if value then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Auto%20Find%20Katakuri"))()
        end
    end
})
-- Set Up Auto Spin
_G.autoSpinEnabled = false
_G.selectedFruitName = {}
_G.selectedSpinType = "Normal"  -- M·∫∑c ƒë·ªãnh spin Normal

-- Dropdown ch·ªçn tr√°i c·∫ßn d·ª´ng khi spin tr√∫ng
Tabs.Fruit:AddDropdown("FruitSelector", {
    Title = "Select Fruit For Stop Spin",
    Values = {
        "Barrier", "Chop", "Sand", "Smoke", "Rubber", "Falcon", "Gas", "Bomb", "Ice", "Darkness",
        "Ash", "Light", "Flame", "Magma", "Paw", "String", "Love", "Snow", "Quake", "Gravity",
        "Phoenix", "Dragon", "TSRubber", "Magnet", "IceV2", "MagmaV2", "LightV2", "FlameV2",
        "Venom", "Dough", "Leopard", "DoughV2", "Ope", "LeopardV2", "Lightning", "Nika", "DragonV2",
        "Soul", "DarkXQuake", "Okuchi"
    },
    Multi = true,
    Default = {},
    Callback = function(value)
        local selected = {}
        for fruitName, isSelected in pairs(value) do
            if isSelected then
                table.insert(selected, fruitName)
            end
        end
        _G.selectedFruitName = selected
        print("Selected fruits:", table.concat(selected, ", "))
    end
})

-- Dropdown ch·ªçn ki·ªÉu spin (Normal / Fast)
Tabs.Fruit:AddDropdown("SpinTypeSelector", {
    Title = "Select Spin Type",
    Values = {"Normal", "Fast"},
    Multi = false,
    Default = "Normal",
    Callback = function(value)
        _G.selectedSpinType = value
        print("Selected spin type:", value)
    end
})

-- Toggle b·∫≠t/t·∫Øt auto spin
local autoSpinToggleRef = nil
autoSpinToggleRef = Tabs.Fruit:AddToggle("AutoSpinToggle", {
    Title = "Auto Spin",
    Default = false,
    Callback = function(state)
        if state then
            _G.autoSpinEnabled = true
            startAutoSpin()
        else
            _G.autoSpinEnabled = false
            print("Auto Spin ƒë√£ t·∫Øt.")
        end
    end
})

-- H√†m ki·ªÉm tra tr√°i c√≥ n·∫±m trong danh s√°ch c·∫ßn d·ª´ng
local function isRare(fruitName)
    for _, v in pairs(_G.selectedFruitName or {}) do
        if string.lower(v) == string.lower(fruitName) then
            return true
        end
    end
    return false
end

-- H√†m ch·∫°y Auto Spin
function startAutoSpin()
    task.spawn(function()
        print("Auto Spin ƒëang ch·∫°y...")
        while _G.autoSpinEnabled do
            local spinArgs = {Type = {}}
            if _G.selectedSpinType == "Fast" then
                spinArgs = {Type = "Fast"}
            else
                spinArgs = {}
            end

            local args = {"FruitsHandler", "Spin", spinArgs}
            local result = game:GetService("ReplicatedStorage"):WaitForChild("Replicator"):InvokeServer(unpack(args))
            print("K·∫øt qu·∫£ spin tr·∫£ v·ªÅ t·ª´ server:", result)

            if result and isRare(result) then
                print("D·ª™NG! G·∫∑p tr√°i hi·∫øm:", result)
                _G.autoSpinEnabled = false
                if autoSpinToggleRef and autoSpinToggleRef.SetValue then
                    autoSpinToggleRef:SetValue(false) -- G·∫°t toggle v·ªÅ OFF
                end
                break
            else
                print("Spin ti·∫øp...")
            end

            task.wait(3.5)
        end
    end)
end
--K√≠ch Ho·∫°t Kaitun Auto Spin
Tabs.Fruit:AddButton({
    Title = "Kaitun Auto Spin Fruit",
    Description = "K√≠ch Ho·∫°t Kaitun Auto Spin",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/nhansamtinam/KimSoiHub/refs/heads/main/Kaitun"))()
    end
})

updateConfigListDropdown()

local autoloadConfig = SaveManager:GetAutoloadConfig()
if autoloadConfig and autoloadConfig ~= "" then
    task.delay(10, function()
        SaveManager:LoadConfig(autoloadConfig)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Autoload",
            Text = "ƒê√£ t·ª± ƒë·ªông load config: " .. autoloadConfig,
            Duration = 5,
            Icon = "rbxassetid://138706932256796"
        })
    end)
end

Tabs.Setting:AddParagraph("AutoloadInfo", "Config t·ª± ƒë·ªông load hi·ªán t·∫°i: " .. (autoloadConfig or "Kh√¥ng c√≥"))
